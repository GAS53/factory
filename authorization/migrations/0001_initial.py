# Generated by Django 4.0.5 on 2022-07-02 09:06

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import tkinter.tix


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('clock_number', models.IntegerField(primary_key=tkinter.tix.Tree, serialize=False, verbose_name='табельный номер')),
                ('username', models.CharField(error_messages={'unique': 'Пользователь с таким логином уже существует'}, help_text='Не больше 128 символов цифры и латинские буквы', max_length=128, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='Логин')),
                ('password', models.CharField(max_length=256, verbose_name='Пароль')),
                ('first_name', models.CharField(max_length=128, verbose_name='имя')),
                ('last_name', models.CharField(max_length=128, verbose_name='фамилия')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Электронная почта')),
                ('phone', models.CharField(max_length=10, verbose_name='Номер телефона в формате 9.. ... .. ..')),
                ('date_of_birth', models.DateField(null=True, verbose_name='День рождения')),
                ('is_active', models.BooleanField(default=True)),
                ('is_technologist', models.BooleanField(default=False, verbose_name='Технолог')),
                ('is_mechanic', models.BooleanField(default=False, verbose_name='механик')),
                ('creation_date', models.DateField(auto_now_add=True, verbose_name='дата прихода на предприятие/создание записи')),
                ('is_staff', models.BooleanField(default=True)),
                ('bonus_procent', models.PositiveSmallIntegerField(default=0, verbose_name='процент премии')),
                ('next_knowledge_check', models.DateField(null=True, verbose_name='следующая ежегодная проверка знаний')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
