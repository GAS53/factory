# Generated by Django 4.0.5 on 2022-07-02 09:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Aggregat_func',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('abb', models.CharField(max_length=2, verbose_name='буква обозначения функции агрегата')),
                ('description', models.CharField(max_length=20, verbose_name='расшифровка названия')),
            ],
        ),
        migrations.CreateModel(
            name='Aggregates',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('num_in_block', models.PositiveSmallIntegerField()),
                ('abb', models.CharField(max_length=2, verbose_name='буква обозначения функциональной работы')),
                ('description', models.CharField(max_length=30, verbose_name='расшифровка названия')),
                ('next_revision_date', models.DateField()),
                ('next_comprehensive_test', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Blocs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('min_description', models.CharField(max_length=30, verbose_name='название блока')),
                ('max_description', models.CharField(max_length=256, null=True, verbose_name='полная расшифровка')),
            ],
        ),
        migrations.CreateModel(
            name='Devices',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('num_in_aggregat', models.PositiveSmallIntegerField(null=True)),
                ('socket', models.FileField(upload_to='', verbose_name='путь к сокету')),
                ('crytiсal_high', models.IntegerField(default=None, null=True)),
                ('high', models.IntegerField(default=None, null=True)),
                ('low', models.IntegerField(default=None, null=True)),
                ('crytiсal_low', models.IntegerField(default=None, null=True)),
                ('next_revision_date', models.DateField()),
                ('alarm', models.BooleanField(default=False)),
                ('aggregat_func', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='technologist.aggregat_func')),
                ('aggregate_id', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='technologist.aggregates')),
                ('block_id', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='technologist.blocs')),
            ],
        ),
        migrations.CreateModel(
            name='Jobseeker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='media/schems/', verbose_name='Poster')),
            ],
        ),
        migrations.CreateModel(
            name='Params',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('abb', models.CharField(max_length=5, verbose_name='букваы полная расшифровка прибора')),
                ('description', models.CharField(max_length=20, verbose_name='расшифровка названия')),
            ],
        ),
        migrations.CreateModel(
            name='History_Params',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pv', models.PositiveSmallIntegerField(default=None, null=True)),
                ('op', models.PositiveSmallIntegerField(default=None, null=True)),
                ('sp', models.PositiveSmallIntegerField(default=None, null=True)),
                ('time', models.DateTimeField()),
                ('device_id', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='technologist.devices')),
            ],
        ),
        migrations.AddField(
            model_name='devices',
            name='param',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='technologist.params'),
        ),
        migrations.CreateModel(
            name='Defects',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.CharField(max_length=512)),
                ('now_mechanic', models.DateTimeField(auto_now_add=True)),
                ('now_electrician', models.DateTimeField(auto_now_add=True)),
                ('now_KIP', models.DateTimeField(auto_now_add=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('planned_fix_it', models.DateTimeField()),
                ('factual_fix_it', models.DateTimeField()),
                ('defect_aggregate', models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='technologist.aggregates')),
                ('defect_device', models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='technologist.devices')),
                ('who_find_defect', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='aggregates',
            name='block_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='technologist.blocs'),
        ),
    ]
